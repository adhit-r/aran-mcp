# Authelia configuration for MCP Sentinel
# https://www.authelia.com/integration/proxies/nginx/

# Authelia backend
upstream authelia {
    server authelia:9091;
}

# MCP Backend
upstream mcp-backend {
    server mcp-backend:8080;
}

# MCP Frontend
upstream mcp-frontend {
    server mcp-frontend:3000;
}

# Authelia portal
server {
    listen 80;
    server_name auth.mcp-sentinel.local;

    location / {
        proxy_pass http://authelia;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Uri $request_uri;
    }
}

# MCP Sentinel Frontend
server {
    listen 80;
    server_name mcp-sentinel.local;

    # Forward authentication to Authelia
    location /api/verify {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Original-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Protected routes - require authentication
    location / {
        auth_request /api/verify;
        auth_request_set $user $upstream_http_remote_user;
        auth_request_set $groups $upstream_http_remote_groups;
        auth_request_set $name $upstream_http_remote_name;
        auth_request_set $email $upstream_http_remote_email;

        proxy_set_header Remote-User $user;
        proxy_set_header Remote-Groups $groups;
        proxy_set_header Remote-Name $name;
        proxy_set_header Remote-Email $email;

        proxy_pass http://mcp-frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Handle authentication errors
    error_page 401 = @error401;
    error_page 403 = @error403;

    location @error401 {
        return 302 http://auth.mcp-sentinel.local/?rd=$scheme://$http_host$request_uri;
    }

    location @error403 {
        return 302 http://auth.mcp-sentinel.local/?rd=$scheme://$http_host$request_uri;
    }
}

# MCP Sentinel API
server {
    listen 80;
    server_name api.mcp-sentinel.local;

    # Forward authentication to Authelia
    location /api/verify {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Original-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Protected API routes
    location / {
        auth_request /api/verify;
        auth_request_set $user $upstream_http_remote_user;
        auth_request_set $groups $upstream_http_remote_groups;
        auth_request_set $name $upstream_http_remote_name;
        auth_request_set $email $upstream_http_remote_email;

        proxy_set_header Remote-User $user;
        proxy_set_header Remote-Groups $groups;
        proxy_set_header Remote-Name $name;
        proxy_set_header Remote-Email $email;

        proxy_pass http://mcp-backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Handle authentication errors
    error_page 401 = @error401;
    error_page 403 = @error403;

    location @error401 {
        return 302 http://auth.mcp-sentinel.local/?rd=$scheme://$http_host$request_uri;
    }

    location @error403 {
        return 302 http://auth.mcp-sentinel.local/?rd=$scheme://$http_host$request_uri;
    }
}





